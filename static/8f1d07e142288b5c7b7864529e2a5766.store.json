{"2103c6eb-e8b0-5bf0-b628-423777c97210":{"id":"2103c6eb-e8b0-5bf0-b628-423777c97210","path":"/constructors","title":"Constructors","excerpt":"Constructors Los constructores nos permiten construir valores usando nuestros data types inmutable para modelar soluciones a problemas…"},"ed1743a8-329c-546d-aa45-d1785d4a2b2e":{"id":"ed1743a8-329c-546d-aa45-d1785d4a2b2e","path":"/declarative-encoding","title":"Declarative Encoding","excerpt":"Declarative Encoding"},"56a314d2-a6e7-5197-9c17-a9d05f398d5f":{"id":"56a314d2-a6e7-5197-9c17-a9d05f398d5f","path":"/domain","title":"Domain","excerpt":"Domain Un dominio hace referencia a un conjunto de problemas similares que queremos resolver de una forma sencilla, simple de testear y…"},"ac252e78-670f-5b03-b24b-3bebd5070004":{"id":"ac252e78-670f-5b03-b24b-3bebd5070004","path":"/error-handling","title":"Error Handling","excerpt":"Error Handling"},"c74c42af-c257-5884-b689-a299c1497691":{"id":"c74c42af-c257-5884-b689-a299c1497691","path":"/executable-encoding","title":"Executable Encoding","excerpt":"Executable Encoding"},"f2c47ada-1bb3-5be2-9765-31d5b84a4dd5":{"id":"f2c47ada-1bb3-5be2-9765-31d5b84a4dd5","path":"/functional-design","title":"Functional Design","excerpt":"Functional Design Article:  https://degoes.net/articles/functional-design Para poder entender el functional design tenemos que desgranarlo…"},"4484cef8-8049-594b-8e98-662f6fd6dfbf":{"id":"4484cef8-8049-594b-8e98-662f6fd6dfbf","path":"/high-order-functions","title":"High Order Functions","excerpt":"High Order Functions Las high order funcitons son funciones que reciben una función como párametro  o  devuelven una función como parámetro…"},"c1fd486c-db08-5c9d-adae-4522493d0dea":{"id":"c1fd486c-db08-5c9d-adae-4522493d0dea","path":"/higher-order-functions","title":"Higher Order Functions","excerpt":"Higher Order Functions Las high ordered functions nos permiten blabla..."},"bf0f3340-e181-50e1-ab53-dbac92ff2b88":{"id":"bf0f3340-e181-50e1-ab53-dbac92ff2b88","path":"/inmutable-data-types","title":"Inmutable Data Types","excerpt":"Inmutable Data Types Estos tipos de datos no pueden ser modificados una vezse asignan, lo que hacen que el control se invierta, sea más…"},"a6e28740-a666-5ec2-bbb3-3d023e4d90a2":{"id":"a6e28740-a666-5ec2-bbb3-3d023e4d90a2","path":"/model","title":"Model","excerpt":"Model Los problemas funcionales no resuelven problemas directamente, sino que se describen a través de modelos, que luego se interpretan…"},"a268aac2-1eec-57b0-901e-592f0eed7e37":{"id":"a268aac2-1eec-57b0-901e-592f0eed7e37","path":"/null-references-options","title":"Null References - Options","excerpt":"Null References - Options Source:  https://medium.com/hootsuite-engineering/null-references-or-how-i-learned-to-stop-worrying-and-love-scala…"},"750de0cd-650c-5933-8f3a-15066930db8e":{"id":"750de0cd-650c-5933-8f3a-15066930db8e","path":"/operators","title":"Operators","excerpt":"Operators Los operadores nos permiten transformar y combinar soluciones a subproblemas para crear valores que modelan soluciones a problemas…"},"a56a3fa3-2baf-54c3-8d81-d75790d75e79":{"id":"a56a3fa3-2baf-54c3-8d81-d75790d75e79","path":"/readme","title":"Scala","excerpt":"Scala Scala es un lenguaje dep rogramación que intenta expresar patrones de programación en una forma concisa, elegante y type-safe. Integra…"},"6aa04ceb-f634-5115-ba19-c82d92f74de2":{"id":"6aa04ceb-f634-5115-ba19-c82d92f74de2","path":"/scala-error-handling","title":"Error Handling","excerpt":"Error Handling Al igual que en el artículo de [ Null References Options ], se ha modelado el sistema de try catch para permitir una gestión…"},"7acb3def-a56e-5e86-9ef9-f212925d8d48":{"id":"7acb3def-a56e-5e86-9ef9-f212925d8d48","path":"/solutions","title":"Solutions","excerpt":"Solutions"},"97d238ac-c83d-52bd-b5c4-66e4fd8a4e2d":{"id":"97d238ac-c83d-52bd-b5c4-66e4fd8a4e2d","path":"/todo","title":"Todo","excerpt":"Todo [ Functional Design ] https://about.chatroulette.com/posts/algebraic-data-types/"}}